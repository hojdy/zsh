#autoload

_autocomplete.recent_paths() {
  local -aU reply
  local -i nmatches=$compstate[nmatches]

  _tags recent-directories recent-files

  while _tags; do
    _requested recent-directories &&
      [[ -v functions[_autocomplete.recent_dirs] && $_comp_tags == *(directories|files)* ]] &&
      _autocomplete.recent_dirs $words[CURRENT] &&
      .autocomplete.recent_paths.add recent-directories 'recent directory' $reply

    _requested recent-files &&
      [[ -v functions[_autocomplete.recent_files] && $_comp_tags == *files* ]] &&
      _autocomplete.recent_files $words[CURRENT] &&
      .autocomplete.recent_paths.add recent-files 'recent file' $reply
  done

  (( compstate[nmatches] > nmatches ))
}

.autocomplete.recent_paths.add() {
  local tag=$1
  local group_name=$2
  shift 2

  local -a display popt
  local disp prefix

  local -i max_matches=$(( compstate[nmatches] + 10 ))
  local word=${~words[CURRENT]:P}

  local path; for path in ${@:P}; do
    (( compstate[nmatches] < max_matches )) ||
      break

    [[ -e $path ]] ||
      continue

    disp=${(D)path}
    (( $#disp > 1 )) ||
      continue

    prefix=$path:h
    [[ $word = ($path|$path:h) || $prefix == ($word:h|$PWD) ]] &&
      continue

    if [[ $path == /* ]]; then
      path=${path#/}
      popt=( -P '/' -W '/' )
    fi

    display=( "$disp" )
    local _comp_no_ignore=1
    _description -V $tag expl $group_name
    compadd "$expl[@]" -d display -f $popt - $path
  done
}

_autocomplete.recent_paths "$@"
